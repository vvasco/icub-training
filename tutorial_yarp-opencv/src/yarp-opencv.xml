<?xml version="1.0" encoding="ISO-8859-1"?>
<?xml-stylesheet type="text/xsl" href="yarpmanifest.xsl"?>

<module>
  <name>yarp-opencv</name>
  <doxygen-group></doxygen-group>
  <description>Track a red ball using Hough Transform</description>
  <copypolicy>Released under the terms of the GNU GPL v2.0</copypolicy>
  <version>1.0</version>

  <description-long>
    Detect a red ball using Hough transform for circles. It performs basic red pixel detection, edge and circle detection.
    Parameters and color filter have been adaptd to work on the provided image sequence.

    To use the module do the following:
    - Download the sequence and replay it with yarpdataplayer.
    - Run the module and connect the input and output ports to view the results.

</description-long>

  <arguments>
    <param default="yarp-opencv" desc="select the current context.">context</param>
    <param default="config.ini" desc="configuration file name.">from</param>
  </arguments>

  <authors>
    <author email="vadim.tikhanoff@iit.it"> Vadim Tikhanoff </author>
  </authors>

  <data>
    <input>
      <type>yarp::sig::Image</type>
      <port carrier="udp">/yarp-opencv/image:i</port>
      <description>
        Gets the input stream from the datasetplayer.
      </description>
    </input>
    <output>
      <type>yarp::sig::Image</type>
      <port carrier="udp">/yarp-opencv/image:o</port>
      <description>
        streams out the result of the image processing.
      </description>
    </output>
    <output>
      <type>yarp::sig::Image</type>
      <port carrier="udp">/yarp-opencv/mask:o</port>
      <description>
        streams out the mask of the red ball.
      </description>
    </output>
    <output>
      <type>yarp::os::Bottle</type>
      <port carrier="tcp">/yarp-opencv/target:o</port>
      <description>
        streams out the target position.
      </description>
    </output>
  </data>

  <services>
    <server>
      <type>yarpOpencv_IDL</type>
      <idl>yarp-opencv.thrift</idl>
      <port>/yarp-opencv/rpc</port>
      <description>service port</description>
    </server>
  </services>

</module>
